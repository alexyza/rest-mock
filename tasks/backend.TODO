
--- ✄ -----------------------
SERVICES:
 - Uploader
 - Neo4j graphdb
 - Irods virtual resources
 - Rethinkdb: nosql json + joins + changefeed
 - Elasticsearch

--- ✄ -----------------------
GUIDELINES:
- python 3.5
- configuration via INI file
- extended a small list of initial services

### protocol specifications?
https://github.com/ga4gh/mme-apis/blob/v1.0a/search-api.md

 ### python debugger
http://nbviewer.ipython.org/github/donnemartin/data-science-ipython-notebooks/blob/master/python-data/pdb.ipynb

### error handling?
https://www.youtube.com/watch?v=8kTlzR4HhWo

--- ✄ -----------------------
BUGS:
☐ Rethinkdb or other db connection before request...?
  ☐ Limit a before request to a certain endpoint, not to all??
  ☐ take off 'server.py'

--- ✄ -----------------------
Token:
 ☐ PyJWT
   ☐ working snippet
   https://github.com/sahat/satellizer/blob/master/examples/server/python/app.py
   ☐ full integrated example
   https://github.com/graup/flask-restless-security

 ☐ RethinkDB
 !WOW!
1) Pass or receive JSON objects to API in flask
2) They will be stored as it is on RethinkDB
3) You can filter/transform/query nested JSON data, also with Lambda function
4) Validate input/output JSON with marshal schema/model
   ✔ limit @done (16-01-04 01:38)
   ✔ secure rdb services? @done (16-01-04 12:10)
   ✔ moving load models outside, as a better check @done (16-01-04 15:55)
   ☐ images?
     https://www.rethinkdb.com/api/python/binary/
     https://www.rethinkdb.com/docs/storing-binary/python/
   ☐ recursive marshal
   ☐ indexes
   ☐ feed change
   ☐ nested update embed document
   https://www.rethinkdb.com/api/python/update/

r.table("test")
 .filter(r.row.hasFields({"stock": {"abc": true}}))
 .update({"stock": {"abc": r.row("stock")("abc").append({"state": 42})}})

r.table('whateves').get('blah').update(function(row) {
  return {schedules: {amy: row('schedules')('amy').append('new_value')}};
});

r.db('test').table('taskQueue').get("eb533cd0-fef1-48bf-9fb8-b66261c9171b").update({
    errors: r.row('errors').append('appended error')
})

 ☐ rename endpoints (newsteps): tables in convert script and jsons files
 ☐ uploads
   ☐ backup

 ☐ open issue flask-admin @REMEMBER
   ☐ server.py:87
 ☐ gunicorn configuration

   --- ✄ -----------------------
 ☐ Rest blueprint
 http://flask-restful-cn.readthedocs.org/en/0.3.4/intermediate-usage.html#use-with-blueprints
 http://www.wiredmonk.me/customizing-flask-restful.html
 ☐ Restful interesting
   ☐ cors decorator
   http://flask.pocoo.org/snippets/56/
   ☐ crypto
   ☐ paging
✔ Configuration @done (15-11-24 12:00)
  ✔ Exceptions @done (15-09-30 16:50)
    http://flask.pocoo.org/docs/0.10/patterns/apierrors/
  ✔  app @factory @done (15-11-24 12:00)

  ☐ CHECK: Rest as @classmode
    ☐ Flask Classy - https://github.com/apiguy/flask-classy/
    ☐ What about other rest libs http://stackoverflow.com/a/23947463/2114395
    ☐ apispec https://github.com/jmcarp/flask-apispec (and restful plus)

  ☐ Tests: noose?
  ☐ Data @validation
    ☐ http://docs.python-cerberus.org/en/latest/
  ☐ Asynchrounous
    ☐ gunicorn
    ☐ twisted https://github.com/cravler/flask-twisted/
  ☐ A valid @PySix [implementation]
    ☐ e.g. jinja2 compat

  ☐ add to project some @libraries
    https://github.com/danrobinson/tracestack

COMPLETED:
 ✔ restful code and test @done (15-09-10 13:14)
 ✔ restful refactoring @done (15-09-10 15:44)
   ✔ package with resources @done (15-09-10 14:52)
   ✔ automatic endpoint @done (15-09-10 15:05)
     ✔ property inside extended resource class @done (15-09-10 15:05)
   ✔ pythonic resource listing from package @done (15-09-10 15:44)
 ✘ abstract Service class @cancelled (15-09-10 14:53)
 ✘ Mock services file @cancelled (15-09-15 11:56)
 ✘ yaml reader @cancelled (15-09-10 14:50)
 ✘ configuration from yaml to rest endpoints @cancelled (15-09-10 14:50)
 ✔ A more extensible mock @done (15-09-25 22:19)
   ✔ method inside ExtendedApiResource to specify a different endpoint @done (15-09-16 13:56)
   ✔ configuration option to specify one or more module file to look for endpoints classes @done (15-09-16 17:25)
     ✔ refactoring @done (15-09-17 14:16)
       ✔ create a configuration module @done (15-09-17 12:11)
       ✔ move metas to Meta class @done (15-09-17 13:15)
       ✔ create Endpoint class for creating resources @done (15-09-17 13:22)
       ✔ rename mock.py in exampleservices.py @done (15-09-17 14:16)
   ✔ get with the key @done (15-09-25 22:19)
   ✔ Decorator module @done (15-09-28 09:52)
     ✔ like flask app? @done (15-09-28 09:52)
     ✔ parameters as module @done (15-09-28 09:52)
   ✔ parameters: parsing @argument @done (15-09-28 19:05)
     ✘ decorat for a class method which also takes arguments is difficult! @cancelled (15-09-28 15:25)
       ✔ solution? @done (15-09-28 19:05)
       http://wrapt.readthedocs.org/en/latest/decorators.html#decorating-instance-methods
       http://scottlobdell.me/2015/04/decorators-arguments-python/
       ✘ decorators order?? @cancelled (14-09-30 07:57)
   ✔ Json output @done (15-09-30 09:08)
     http://flask-restful.readthedocs.org/en/latest/extending.html#response-formats
   ✔ Conventions? Marshal? @done (15-09-30 14:48)
     ✘ data, code, headers @cancelled (15-09-30 14:48)
     https://github.com/flask-restful/flask-restful/blob/master/flask_restful/utils/__init__.py#L14
     ✔ type, count and data @done (15-09-30 14:49)
   ✔ log exceptions @done (15-09-30 14:49)
  ✔ logging function (see irods2graph) @done (15-09-25 22:19)
  ✔ cors @done (15-09-11 12:46)
  ✔ logging @done (15-09-11 11:07)
  ✔ Define range ports @done (15-09-15 14:35)
    ✔ https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers @done (15-09-15 14:35)
    ✔ 8081-8089 @done (15-09-15 14:35)
  ✔ standard return values @done (15-09-16 10:39)
    ✔ json dumps @done (15-09-16 10:39)
  ✔ Decorate all methods in a class with a decorator @cool @done (15-09-26 12:42)
  ✔ changelog? @done (15-09-26 15:45)
    ✘ https://github.com/skywinder/github-changelog-generator @cancelled (15-09-26 15:45)
 ✔ Flask security @done (15-11-23 15:36)
   ✔ working snippet @done (15-11-19 10:30)
 ✔ Flask admin users and roles @done (15-11-23 15:36)
   ✔ working snippet @done (15-11-18 17:47)
 ✔ A mix of the previous two @done (15-11-23 15:36)
   ✔ working snippet @done (15-11-20 08:55)
   ✔ use security auth for blocking admin pages @done (15-11-20 10:37)
   ✔ flask admin for user_role relationship? @done (15-11-20 11:35)
 ✔ basic code cleaning @done (15-11-23 16:24)
 ✔ Rename libs @done (15-11-24 10:50)
 ✔ A good refactor @done (15-11-24 12:28)
 ✔ Add admin and security to current project @done (15-11-24 14:24)
   ✔ optional? @done (15-11-24 15:08)
 ✔ Fix security code into a separate file @done (15-11-24 17:34)
 ✔ Fix back admin @done (15-11-24 18:30)
   ✔ bug found! @done (15-11-24 18:23)
 ✔ Security in the docs/README @done (15-11-25 19:18)
   ✔ return the right code? @done (15-11-25 19:18)
 ✔ documentation @done (15-11-25 19:18)
   ✔ write base @done (15-11-25 16:32)
   ✔ doc for security and test @done (15-11-25 19:03)
 ✔ move login/logout/register bluprint to "api" @done (15-12-04 08:16)
   ✔ also admin to /api/manage? @done (15-12-04 08:16)
   ✔ also in documentation @done (15-12-04 08:20)
 ✔ log info at each request for restful @done (15-12-10 07:46)
 ✔ readthedocs? @done (15-12-11 10:12)
 ✔ flask admin rest redirect after login is wrong. an option for flask admin? @done (15-12-18 13:38)
 ✔ restful intercept abort if not logged @done (15-12-20 09:04)
 ✔ double logs? @done (15-12-21 19:27)
   ✔ irods fault... how to list loggers? @done (15-12-21 19:27)
 ✔ Single services startup @done (16-01-20 22:06)
   ✔ implement queries @done (16-01-21 15:29)
   ✔ current page / per page @done (16-01-22 14:47)
     ✔ default parameters @done (16-01-22 14:47)
 ✔ PUT method / update @done (16-02-01 18:38)
 ✔ DELETE method @done (16-02-02 07:58)
  ✔ Add complex routing to ini file @done (16-02-10 15:16)
    ✔ except normal read, go to another function @done (16-02-10 14:49)
    ✔ json reading @done (16-02-10 14:49)
    ✔ convert ini sections into a dictionary like json load @done (16-02-10 15:16)
